{"mappings":"AAAA,MA6BMA,EAAcC,IAClBC,SAASC,cAAc,QAAQC,UAAYH,CAAM,EAzBrC,IAAAI,IA4BR,IAAIC,KAAK,cA3BbC,aAAY,KACV,MAAMC,EAAQ,IAAIF,KAAKD,GAAc,IAAIC,KAEnCG,EAAUC,KAAKC,MACnBH,EAVuB,IACJ,IAWfI,EAAUF,KAAKC,MACnBH,EAAU,IAXM,IAaZK,EAAQH,KAAKC,MACjBH,EAAU,KAbG,IAgBTM,EAAOJ,KAAKC,MAChBH,EACG,OAKLR,EAFoB,GAAGc,MAASD,KAASD,KAAWH,IAE5B,GACvB","sources":["src/js/02-timer.js"],"sourcesContent":["const millisecondsInSecond = 1000;\nconst secondsInMinutes = 60;\nconst minutesInHour = 60;\nconst hoursInDay = 24;\n\nconst timer = targetDate => {\n  setInterval(() => {\n    const delta = new Date(targetDate) - new Date();\n\n    const seconds = Math.floor(\n      (delta / millisecondsInSecond) % secondsInMinutes\n    );\n    const minutes = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinutes)) % minutesInHour\n    );\n    const hours = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinutes * minutesInHour)) %\n        hoursInDay\n    );\n    const days = Math.floor(\n      delta /\n        (millisecondsInSecond * secondsInMinutes * minutesInHour * hoursInDay)\n    );\n\n    const timerFormat = `${days}d ${hours}:${minutes}:${seconds}`;\n\n    renderTimer(timerFormat);\n  }, 1000);\n};\nconst renderTimer = string => {\n  document.querySelector('span').innerText = string;\n};\n\ntimer(new Date('2024/06/03'));\n"],"names":["$40d383fb392a7037$var$renderTimer","string","document","querySelector","innerText","targetDate","Date","setInterval","delta","seconds","Math","floor","minutes","hours","days"],"version":3,"file":"02-timer.b305bac4.js.map"}