{"mappings":"YAAA,IAKcA,EALRC,EAAuB,IA6BvBC,EAAc,SAAAC,GAClBC,SAASC,cAAc,QAAQC,UAAYH,C,EAzB/BH,EA4BR,IAAIO,KAAK,cA3BbC,aAAY,WACV,IAAMC,EAAQ,IAAIF,KAAKP,GAAc,IAAIO,KAEnCG,EAAUC,KAAKC,MACnBH,EAASR,EATU,IAWfY,EAAUF,KAAKC,MACnBH,EAAU,IAXM,IAaZK,EAAQH,KAAKC,MACjBH,EAAU,KAbG,IAgBTM,EAAOJ,KAAKC,MAChBH,EACG,OAGCO,EAAc,GAAYC,OAATF,EAAK,MAAaE,OAATH,EAAM,KAAcG,OAAXJ,EAAQ,KAAWI,OAARP,GAEpDR,EAAYc,E,GACX,I","sources":["src/js/02-timer.js"],"sourcesContent":["const millisecondsInSecond = 1000;\nconst secondsInMinutes = 60;\nconst minutesInHour = 60;\nconst hoursInDay = 24;\n\nconst timer = targetDate => {\n  setInterval(() => {\n    const delta = new Date(targetDate) - new Date();\n\n    const seconds = Math.floor(\n      (delta / millisecondsInSecond) % secondsInMinutes\n    );\n    const minutes = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinutes)) % minutesInHour\n    );\n    const hours = Math.floor(\n      (delta / (millisecondsInSecond * secondsInMinutes * minutesInHour)) %\n        hoursInDay\n    );\n    const days = Math.floor(\n      delta /\n        (millisecondsInSecond * secondsInMinutes * minutesInHour * hoursInDay)\n    );\n\n    const timerFormat = `${days}d ${hours}:${minutes}:${seconds}`;\n\n    renderTimer(timerFormat);\n  }, 1000);\n};\nconst renderTimer = string => {\n  document.querySelector('span').innerText = string;\n};\n\ntimer(new Date('2024/06/03'));\n"],"names":["targetDate","$84b9dae4df53835d$var$millisecondsInSecond","$84b9dae4df53835d$var$renderTimer","string","document","querySelector","innerText","Date","setInterval","delta","seconds","Math","floor","minutes","hours","days","timerFormat","concat"],"version":3,"file":"02-timer.91480ee3.js.map"}