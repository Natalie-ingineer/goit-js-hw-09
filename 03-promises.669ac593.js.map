{"mappings":"iiBAAAA,EAAA,S,iBAIAC,EAAAC,GAASC,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,EACTC,aAAc,MACdC,KAAK,EACLC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,WAAW,EACXC,oBAAoB,EACpBC,cAAc,EACdC,cAAc,EAEdC,GAAI,iBACJC,UAAW,kBACXC,OAAQ,KACRC,WAAY,YACZC,SAAU,OACVC,cAAc,EACdC,qBAAsB,IACtBC,kBAAmB,OACnBC,aAAa,EACbC,SAAS,EACTC,gBAAgB,EAChBC,qBAAsB,QACtBC,oBAAqB,OAErBC,QAAS,CACPC,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,wBAGpByB,QAAS,CACPN,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,yBAIT0B,SAASC,cAAc,SACvBD,SAASC,cAAc,QAMpC,SAASC,EAAcpC,EAAUqC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEvC,WAAUqC,UAEpBG,EAAO,CAAExC,WAAUqC,S,GAEpBA,E,IAbQH,SAASC,cAAc,UAE/BU,iBAAiB,SAexB,SAA0BC,GACxBA,EAAMC,iBAUN,IARA,IAAMC,EAAad,SAASC,cAAc,uBACpCc,EAAYf,SAASC,cAAc,sBACnCe,EAAchB,SAASC,cAAc,wBAErCgB,EAAaC,SAASJ,EAAWK,OACjCC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAE3BG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAGhCpB,EAAcoB,EAFOL,GAAcK,EAAI,GAAKF,GAGzCG,MAAK,SAAAC,G,IAAG1D,EAAQ0D,EAAR1D,SAAUqC,EAAKqB,EAALrB,MACjB1C,EAAAC,GAASC,OAAO6B,QACd,uBAAwCiC,OAAf3D,EAAS,QAAY2D,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAF,G,IAAG1D,EAAQ0D,EAAR1D,SAAUqC,EAAKqB,EAALrB,MAClB1C,EAAAC,GAASC,OAAOoC,QACd,sBAAqC0B,OAAf3D,EAAS,QAAY2D,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport Notiflix from 'notiflix/dist/notiflix-aio-3.2.6.min.js';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '10px',\n  opacity: 1,\n  borderRadius: '5px',\n  rtl: false,\n  timeout: 3000,\n  messageMaxLength: 110,\n  backOverlay: false,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  plainText: true,\n  showOnlyTheLastOne: false,\n  clickToClose: false,\n  pauseOnHover: true,\n\n  ID: 'NotiflixNotify',\n  className: 'notiflix-notify',\n  zindex: 4001,\n  fontFamily: 'Quicksand',\n  fontSize: '13px',\n  cssAnimation: true,\n  cssAnimationDuration: 400,\n  cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\n  closeButton: false,\n  useIcon: true,\n  useFontAwesome: false,\n  fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\n  fontAwesomeIconSize: '34px',\n\n  success: {\n    background: '#32c682',\n    textColor: '#fff',\n    childClassName: 'notiflix-notify-success',\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\n    fontAwesomeClassName: 'fas fa-check-circle',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    backOverlayColor: 'rgba(50,198,130,0.2)',\n  },\n\n  failure: {\n    background: '#ff5549',\n    textColor: '#fff',\n    childClassName: 'notiflix-notify-failure',\n    notiflixIconColor: 'rgba(0,0,0,0.2)',\n    fontAwesomeClassName: 'fas fa-times-circle',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    backOverlayColor: 'rgba(255,85,73,0.2)',\n  },\n});\n\nconst form = document.querySelector('.form');\nconst body = document.querySelector('body');\n\nconst button = document.querySelector('button');\n\nbutton.addEventListener('click', handleFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = firstDelay + (i - 1) * step;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["parcelRequire","$parcel$interopDefault","$6JpON","Notify","init","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","document","querySelector","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","firstDelay","parseInt","value","step","amount","i","then","param","concat","catch"],"version":3,"file":"03-promises.669ac593.js.map"}